---

- name: apt install prerequesites
  apt: name=openssl state=present update_cache=yes

- name: set permissions on /opt
  file:
    path: /opt
    state: directory
    mode: 0755

- name: 'create user to run artifactory'
  user: name={{ artifactory_username }} home=/opt/artifactory/ shell=/bin/bash system=true

- name: 'verify presence of artifactory'
  stat: path="{{ artifactory_home }}/webapps/artifactory.war"
  register: artifactory_jarfile

- name: 'download artifactory'
  unarchive: copy=no src={{ artifactory_url }} dest=/opt/artifactory/ validate_certs=no
  retries: 3
  when: not artifactory_jarfile.stat.exists

- name: 'create config dir for artifactory'
  file: dest=/etc/opt/jfrog/artifactory state=directory owner={{ artifactory_username }} mode=0755

- name: 'create configuration file'
  template:
    src: default.j2
    dest: '/etc/opt/jfrog/artifactory/default'
    owner: root
    group: root
    mode: 0644

- name: 'symlink current version'
  file:
    state=link
    dest=/opt/artifactory/artifactory
    src={{ artifactory_home }}
    owner={{ artifactory_username }}

- name: 'install artifactory as a service'
  command: "{{ artifactory_home }}/bin/installService.sh {{ artifactory_username }}"
  args:
    creates: /etc/init.d/artifactory
  changed_when: yes
  notify:
    - 'restart artifactory'
- name: 'create artifactory database in mysql'
  mysql_db:
    name: artdb
    state: present
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: 'create artifactory database user in mysql'
  mysql_user:
    name: "{{ artifactory_username }}"
    priv: "artdb.*:ALL"
    password: "{{ artifactory_password }}"
    login_user: root
    login_password: "{{ mysql_root_password }}"

- name: 'verify presence of jdbc connector for mysql'
  stat:
    path: "{{ artifactory_home }}/tomcat/lib/{{ mysql_jdbc_base }}-bin.jar"
  register: jdbc_installed

- name: 'download jdbc connector for mysql'
  unarchive:
    copy: no
    src: "{{ mysql_jdbc_url }}"
    dest: /tmp
    validate_certs: no
  retries: 3
  when: not jdbc_installed.stat.exists

- name: 'enable jdbc connector for mysql'
  command: mv /tmp/{{ mysql_jdbc_base }}/{{ mysql_jdbc_base }}-bin.jar {{ artifactory_home }}/tomcat/lib
  when: not jdbc_installed.stat.exists

- name: 'seboolean allow_user_mysql_connect'
  seboolean:
    name: allow_user_mysql_connect
    state: yes
    persistent: yes
  when: ansible_selinux.status == "enabled"
  ignore_errors: yes

- name: 'enable mysql driver'
  template:
    src: storage_mysql.j2
    dest: "{{ artifactory_home }}/etc/storage.properties owner={{ artifactory_username }}"
    mode: 0600
